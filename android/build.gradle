// Ana build klasörü
rootProject.buildDir = "../build"

// Alt projeler için build klasörleri
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}

// App projesini değerlendirmeye al
subprojects {
    project.evaluationDependsOn(":app")
}

// Clean task'i
tasks.register("clean", Delete) {
    delete rootProject.buildDir
}

// Buildscript bloğu
buildscript {
    ext {
        kotlin_version = '1.9.20'
        java_version = JavaVersion.VERSION_11
    }
    repositories {
        google()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.2.2'
        classpath 'com.google.gms:google-services:4.4.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

// Tüm projeler için repository tanımı
allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }
}

// Kotlin metadata sürüm kontrolünü devre dışı bırak
allprojects {
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs += [
                "-Xskip-metadata-version-check",
                "-Xsuppress-version-warnings"
            ]
        }
    }
}

// Alt projelere namespace ataması yapmak için pluginManager hook'unu kullanalım
pluginManager.withPlugin('com.android.library') { plugin ->
    android {
        if (!hasProperty('namespace') || namespace == null) {
            namespace = "com.office701.tayamer.${project.name.replace('-', '_')}"
        }
        println("📦 ${project.name} için namespace: ${namespace}")
        
        compileOptions {
            sourceCompatibility = rootProject.ext.java_version
            targetCompatibility = rootProject.ext.java_version
        }
    }
}

// Tüm alt projelere print uygula
subprojects {
    pluginManager.withPlugin('com.android.library') {
        println("🛠️ ${project.name} eklentisi yapılandırılıyor...")
    }
}

